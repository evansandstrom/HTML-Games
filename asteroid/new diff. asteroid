<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Evan's Asteroid Dodger</title>
    <style>
        body { text-align: center; background-color: black; font-family: Arial, sans-serif; }
        h1 { color: white; font-size: 36px; text-shadow: 3px 3px 5px red; }
        canvas { background-color: #111; border: 2px solid white; }
        #retryButton { display: none; margin-top: 20px; padding: 10px 20px; font-size: 18px; background: red; color: white; border: none; cursor: pointer; }
        #retryButton:hover { background: darkred; }
        #scoreBoard { color: white; font-size: 20px; margin-top: 10px; }
    </style>
</head>
<body>
    <h1>Evan's Asteroid Dodger</h1>
    <canvas id="gameCanvas" width="400" height="500"></canvas>
    <div id="scoreBoard">Score: <span id="score">0</span> | High Score: <span id="highScore">0</span></div>
    <button id="retryButton" onclick="restartGame()">Try Again</button>
    <script>
        const canvas = document.getElementById("gameCanvas");
        const ctx = canvas.getContext("2d");
        const scoreDisplay = document.getElementById("score");
        const highScoreDisplay = document.getElementById("highScore");
        const retryButton = document.getElementById("retryButton");
        
        let spaceship = { x: 180, y: 450, width: 40, height: 40 };
        let asteroids = [];
        let stars = [];
        let powerUps = [];
        let score = 0;
        let starValue = 10;
        let highScore = localStorage.getItem("highScore") || 0;
        let gameOver = false;
        
        highScoreDisplay.textContent = highScore;
        
        function drawSpaceship() {
            ctx.fillStyle = "blue";
            ctx.fillRect(spaceship.x, spaceship.y, spaceship.width, spaceship.height);
        }
        
        function drawAsteroids() {
            ctx.fillStyle = "gray";
            asteroids.forEach(asteroid => {
                ctx.fillRect(asteroid.x, asteroid.y, asteroid.size, asteroid.size);
            });
        }
        
        function drawStars() {
            ctx.fillStyle = "yellow";
            stars.forEach(star => {
                ctx.fillRect(star.x, star.y, 10, 10);
            });
        }
        
        function drawPowerUps() {
            ctx.fillStyle = "green";
            powerUps.forEach(powerUp => {
                ctx.fillRect(powerUp.x, powerUp.y, 15, 15);
            });
        }
        
        function moveAsteroids() {
            asteroids.forEach(asteroid => {
                asteroid.y += asteroid.speed;
            });
            asteroids = asteroids.filter(asteroid => asteroid.y < canvas.height);
        }
        
        function moveStars() {
            stars.forEach(star => {
                star.y += 2;
            });
            stars = stars.filter(star => star.y < canvas.height);
        }
        
        function movePowerUps() {
            powerUps.forEach(powerUp => {
                powerUp.y += 3;
            });
            powerUps = powerUps.filter(powerUp => powerUp.y < canvas.height);
        }
        
        function checkCollisions() {
            asteroids.forEach(asteroid => {
                if (spaceship.x < asteroid.x + asteroid.size &&
                    spaceship.x + spaceship.width > asteroid.x &&
                    spaceship.y < asteroid.y + asteroid.size &&
                    spaceship.y + spaceship.height > asteroid.y) {
                    gameOver = true;
                    retryButton.style.display = "block";
                    if (score > highScore) {
                        highScore = score;
                        localStorage.setItem("highScore", highScore);
                        highScoreDisplay.textContent = highScore;
                    }
                }
            });
            
            stars.forEach((star, index) => {
                if (spaceship.x < star.x + 10 &&
                    spaceship.x + spaceship.width > star.x &&
                    spaceship.y < star.y + 10 &&
                    spaceship.y + spaceship.height > star.y) {
                    score += starValue;
                    scoreDisplay.textContent = score;
                    stars.splice(index, 1);
                }
            });
            
            powerUps.forEach((powerUp, index) => {
                if (spaceship.x < powerUp.x + 15 &&
                    spaceship.x + spaceship.width > powerUp.x &&
                    spaceship.y < powerUp.y + 15 &&
                    spaceship.y + spaceship.height > powerUp.y) {
                    starValue *= 2;
                    setTimeout(() => { starValue = 10; }, 10000);
                    powerUps.splice(index, 1);
                }
            });
        }
        
        function gameLoop() {
            if (gameOver) {
                ctx.fillStyle = "red";
                ctx.font = "30px Arial";
                ctx.fillText("Game Over!", 120, 250);
                return;
            }
            
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            drawSpaceship();
            drawAsteroids();
            drawStars();
            drawPowerUps();
            moveAsteroids();
            moveStars();
            movePowerUps();
            checkCollisions();
            
            ctx.fillStyle = "white";
            ctx.font = "20px Arial";
            ctx.fillText("Score: " + score, 10, 30);
            
            requestAnimationFrame(gameLoop);
        }
        
        document.addEventListener("keydown", (event) => {
            if (event.key === "ArrowLeft" && spaceship.x > 0) {
                spaceship.x -= 20;
            }
            if (event.key === "ArrowRight" && spaceship.x < canvas.width - spaceship.width) {
                spaceship.x += 20;
            }
        });
        
        setInterval(() => {
            asteroids.push({ x: Math.random() * 360, y: 0, size: 30, speed: Math.random() * 3 + 2 });
        }, 1000);
        
        setInterval(() => {
            stars.push({ x: Math.random() * 390, y: 0 });
        }, 1500);
        
        setInterval(() => {
            powerUps.push({ x: Math.random() * 385, y: 0 });
        }, 10000);
        
        function restartGame() {
            spaceship.x = 180;
            asteroids = [];
            stars = [];
            powerUps = [];
            score = 0;
            starValue = 10;
            scoreDisplay.textContent = score;
            gameOver = false;
            retryButton.style.display = "none";
            gameLoop();
        }
        
        gameLoop();
    </script>
</body>
</html>
